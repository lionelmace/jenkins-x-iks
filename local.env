export ACCOUNT

export account='': Account
export advanced-mode=false: Advanced install options. This will prompt for advanced install options
export apikey='': The IBM Cloud API Key.
export azure-acr-subscription='': The Azure subscription under which the specified docker-registry is located
export buildpack='': The name of the build pack to use for the Team
export cleanup-temp-files=true: Cleans up any temporary values.yaml used by helm install [default true]
export cloud-environment-repo='https://github.com/jenkins-x/cloud-environments': Cloud Environments Git repo
export config-file='': Configuration file used for installation
export create-private-vlan=false: Automatically create private vlan (default 'true')
export create-public-vlan=false: Automatically create public vlan (default 'true')
export default-admin-password='': the default admin password to access Jenkins, Kubernetes Dashboard, ChartMuseum and Nexus
export default-admin-username='admin': the default admin username to access Jenkins, Kubernetes Dashboard, ChartMuseum and Nexus
export default-environment-prefix='': Default environment repo prefix, your Git repos will be of the form 'environment-$prefix-$envName'
export disk-encrypt=true: Optional: Disable encryption on a worker node.
export docker-registry='': The Docker Registry host or host:port which is used when tagging and pushing images. If not specified it defaults to the internal registry unless there is a better provider default (e.g. ECR on AWS/EKS)
export docker-registry-org='': The Docker Registry organiation/user to create images inside. On GCP this is typically your Google Project ID.
export domain='': Domain to expose ingress endpoints.  Example: jenkinsx.io
export draft-client-only=false: Only install draft client
export environment-git-owner='': The Git provider organisation to create the environment Git repositories in
export exposecontroller-pathmode='': The ExposeController path mode for how services should be exposed as URLs. Defaults to using subnets. Use a value of `path` to use relative paths within the domain host such as when using AWS ELB host names
export exposecontroller-urltemplate='': The ExposeController urltemplate for how services should be exposed as URLs. Defaults to being empty, which in turn defaults to "{{.Service}}.{{.Namespace}}.{{.Domain}}".
export exposer='Ingress': Used to describe which strategy exposecontroller should use to access applications
export external-dns=false: Installs external-dns into the cluster. ExternalDNS manages service DNS records for your cluster, providing you've setup your domain record
export external-ip='': The external IP used to access ingress endpoints from outside the Kubernetes cluster. For bare metal on premise clusters this is often the IP of the Kubernetes master. For cloud installations this is often the external IP of the ingress LoadBalancer.
export git-api-token='': The Git API token to use for creating new Git repositories
export git-provider-kind='': Kind of Git server. If not specified, kind of server will be autodetected from Git provider URL. Possible values: bitbucketcloud, bitbucketserver, gitea, gitlab, github, fakegit
export git-provider-url='https://github.com': The Git server URL to create new Git repositories inside
export git-public=false: Create new Git repositories as public
export git-username='': The Git username to use for creating new Git repositories
export gitops=false: Creates a git repository for the Dev environment to manage the installation, configuration, upgrade and addition of Apps in Jenkins X all via GitOps
export global-tiller=true: Whether or not to use a cluster global tiller
export helm-client-only=false: Only install helm client
export helm-tls=false: Whether to use TLS with helm
export helm3=false: Use helm3 to install Jenkins X which does not use Tiller
export ingress-class='': Used to set the ingress.class annotation in exposecontroller created ingress
export ingress-cluster-role='cluster-admin': The cluster role for the Ingress controller
export ingress-deployment='jxing-nginx-ingress-controller': The name of the Ingress controller Deployment
export ingress-namespace='kube-system': The namespace for the Ingress controller
export ingress-service='jxing-nginx-ingress-controller': The name of the Ingress controller Service
export install-dependencies=false: Enables automatic dependencies installation when required
export install-only=false: Force the install command to fail if there is already an installation. Otherwise lets update the installation
export isolation='public': The level of hardware isolation for your worker node. Use 'private' to have available physical resources dedicated to you only, or 'public' to allow physical resources to be shared with other IBM customers. For IBM Cloud Public accounts, the default value is public.
export kaniko=false: Use Kaniko for building docker images
export keep-exposecontroller-job=false: Prevents Helm deleting the exposecontroller Job and Pod after running.  Useful for debugging exposecontroller logs but you will need to manually delete the job if you update an environment
export kube-version='': Specify the Kubernetes version, including at least the major.minor version. If you do not include this flag, the default version is used. To see available versions, run ‘ibmcloud ks kube-versions’.
export local-cloud-environment=false: Ignores default cloud-environment-repo and uses current directory
export local-helm-repo-name='releases': The name of the helm repository for the installed ChartMuseum
export login='': Username
export long-term-storage=false: Enable the Long Term Storage option to save logs and other assets into a GCS bucket (supported only for GKE)
export lts-bucket='': The bucket to use for Long Term Storage. If the bucket doesn't exist, an attempt will be made to create it, otherwise random naming will be used
export machine-type='': The machine type of the worker node. To see available machine types, run 'ibmcloud ks machine-types export zone <zone name>'. Default is 'b2c.4x16', 4 cores CPU, 16GB Memory
export name='': Set the name of the cluster that will be created.
export namespace='jx': The namespace the Jenkins X platform should be installed into
export ng=false: Use the Next Generation Jenkins X features like Prow, Tekton, No Tiller, Vault, Dev GitOps
export no-brew=false: Disables brew package manager on MacOS when installing binary dependencies
export no-default-environments=false: Disables the creation of the default Staging and Production environments
export no-gitops-env-apply=false: When using GitOps to create the source code for the development environment and installation, don't run 'jx step env apply' to perform the install
export no-gitops-env-repo=false: When using GitOps to create the source code for the development environment this flag disables the creation of a git repository for the source code
export no-gitops-env-setup=false: When using GitOps to install the development environment this flag skips the post-install setup
export no-gitops-vault=false: When using GitOps to create the source code for the development environment this flag disables the creation of a vault
export no-subnet=false: Optional: Prevent the creation of a portable subnet when creating the cluster. By default, both a public and a private portable subnet are created on the associated VLAN, and this flag prevents that behavior. To add a subnet to the cluster later, run 'ibmcloud ks cluster-subnet-add'.
export no-tiller=true: Whether to disable the use of tiller with helm. If disabled we use 'helm template' to generate the YAML from helm charts then we use 'kubectl apply' to install it to avoid using tiller completely.
export on-premise=false: If installing on an on premise cluster then lets default the 'external-ip' to be the Kubernetes master IP address
export password='': Password
export private-only=false: Use this flag to prevent a public VLAN from being created. Required only when you specify the ‘export private-vlan’ flag without specifying the ‘export public-vlan’ flag.
export private-vlan='': Conditional: Specify the ID of the private VLAN. To see available VLANs, run 'ibmcloud ks vlans export zone <zone name>'. If you do not have a private VLAN yet, do not specify this option because one will be automatically created for you. When you specify a private VLAN, you must also specify either the ‘export public-vlan’ flag or the ‘export private-only’ flag.
export prow=false: Enable Prow to implement Serverless Jenkins and support ChatOps on Pull Requests
export public-vlan='': Conditional: Specify the ID of the public VLAN. To see available VLANs, run 'ibmcloud ks vlans export zone <zone name>'. If you do not have a public VLAN yet, do not specify this option because one will be automatically created for you.
export recreate-existing-draft-repos=false: Delete existing helm repos used by Jenkins X under ~/draft/packs
export region='': The IBM Cloud Region. Default is 'us-east'
export register-local-helmrepo=false: Registers the Jenkins X ChartMuseum registry with your helm client [default false]
export remote-environments=false: Indicates you intend Staging and Production environments to run in remote clusters. See https://jenkins-x.io/getting-started/multi-cluster/
export remote-tiller=true: If enabled and we are using tiller for helm then run tiller remotely in the kubernetes cluster. Otherwise we run the tiller process locally.
export skip-auth-secrets-merge=false: Skips merging the secrets from local files with the secrets from Kubernetes cluster
export skip-cluster-role=false: Don't enable cluster admin role for user
export skip-ingress=false: Skips the installation of ingress controller. Note that a ingress controller must already be installed into the cluster in order for the installation to succeed
export skip-installation=false: Provision cluster only, don't install Jenkins X into it
export skip-login=false: Skip login if already logged in using `ibmcloud login`
export skip-setup-tiller=false: Don't setup the Helm Tiller service - lets use whatever tiller is already setup for us.
export sso=false: SSO Passcode. See run 'ibmcloud login export sso'
export static-jenkins=false: Install a static Jenkins master to use as the pipeline engine. Note this functionality is deprecated in favour of running serverless Tekton builds
export tekton=false: Enables the Tekton pipeline engine (which used to be called knative build pipeline) along with Prow to provide Serverless Jenkins. Otherwise we default to use Knative Build if you enable Prow
export tiller-cluster-role='cluster-admin': The cluster role for Helm's tiller
export tiller-namespace='kube-system': The namespace for the Tiller when using a global tiller
export timeout='6000': The number of seconds to wait for the helm install to complete
export trusted=false: Optional: Enable trusted cluster feature.
export urltemplate='': For ingress; exposers can set the urltemplate to expose
export user-cluster-role='cluster-admin': The cluster role for the current user to be able to administer helm
export username='': The Kubernetes username used to initialise helm. Usually your email address for your Kubernetes account
export vault=false: Sets up a Hashicorp Vault for storing secrets during installation (supported only for GKE)
export vault-bucket-recreate=true: If the vault bucket already exists delete it then create it empty
export version='': The specific platform version to install
export versions-ref='': Jenkins X versions Git repository reference (tag, branch, sha etc)
export versions-repo='https://github.com/jenkins-x/jenkins-x-versions.git': Jenkins X versions Git repo
export workers='': The number of cluster worker nodes. Defaults to 3.
export zone='': Specify the zone where you want to create the cluster, the options depend on what region that you are logged in to. To see available zones, run 'ibmcloud ks zones'. Default is 'wdc07'
export azure-acr-subscription='': The Azure subscription under which the specified docker-registry is located
export docker-registry='': The Docker Registry host or host:port which is used when tagging and pushing images. If not specified it defaults to the internal registry unless there is a better provider default (e.g. ECR on AWS/EKS)
export docker-registry-org='': The Docker Registry organiation/user to create images inside. On GCP this is typically your Google Project ID.
export register-local-helmrepo=false: Registers the Jenkins X ChartMuseum registry with your helm client [default false]